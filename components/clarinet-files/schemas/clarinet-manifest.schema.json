{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Configuration schema for Clarinet.toml files used in Clarity smart contract projects",
  "properties": {
    "contracts": {
      "additionalProperties": {
        "properties": {
          "clarity_version": {
            "default": 1,
            "description": "Clarity language version to use",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer"
          },
          "deployer": {
            "description": "Deployer identifier (wallet name from settings/Devnet.toml)",
            "type": "string"
          },
          "epoch": {
            "default": "2.05",
            "description": "Stacks blockchain epoch",
            "oneOf": [
              {
                "enum": [
                  "2.0",
                  "2.05",
                  "2.1",
                  "2.2",
                  "2.3",
                  "2.4",
                  "2.5",
                  "3.0",
                  "3.1",
                  "3.2",
                  "latest"
                ],
                "type": "string"
              },
              {
                "enum": [
                  2.0,
                  2.05,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3.0,
                  3.1,
                  3.2
                ],
                "type": "number"
              }
            ]
          },
          "path": {
            "description": "Relative path to the contract file from project root",
            "type": "string"
          }
        },
        "required": [
          "path"
        ],
        "type": "object"
      },
      "description": "Contract definitions for the project",
      "examples": [
        {
          "counter": {
            "clarity_version": 2,
            "epoch": "2.1",
            "path": "contracts/counter.clar"
          }
        }
      ],
      "type": "object"
    },
    "project": {
      "description": "Project-level configuration",
      "properties": {
        "analysis": {
          "description": "Analysis passes to run (deprecated, use repl.analysis instead)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "authors": {
          "description": "List of project authors",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "boot_contracts": {
          "description": "List of boot contracts to include (deprecated, kept for backwards compatibility)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cache_dir": {
          "default": ".cache",
          "description": "Directory for caching build artifacts",
          "type": "string"
        },
        "description": {
          "description": "Project description",
          "type": "string"
        },
        "name": {
          "description": "Name of the project",
          "type": "string"
        },
        "override_boot_contracts_source": {
          "additionalProperties": {
            "description": "Path to custom boot contract implementation",
            "type": "string"
          },
          "description": "Override default boot contract implementations with custom ones",
          "examples": [
            {
              "costs": "./custom-boot-contracts/costs.clar",
              "pox-4": "./custom-boot-contracts/pox-4.clar"
            }
          ],
          "type": "object"
        },
        "requirements": {
          "description": "External contract dependencies",
          "items": {
            "properties": {
              "contract_id": {
                "description": "Fully qualified contract identifier (e.g., SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.nft-trait)",
                "type": "string"
              }
            },
            "required": [
              "contract_id"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "telemetry": {
          "default": false,
          "description": "Enable or disable telemetry",
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "repl": {
      "description": "REPL and analysis settings",
      "properties": {
        "analysis": {
          "description": "Static analysis configuration",
          "properties": {
            "check_checker": {
              "description": "Configuration for the check_checker analysis pass",
              "properties": {
                "callee_filter": {
                  "description": "Allow filters in callee to filter caller",
                  "type": "boolean"
                },
                "strict": {
                  "description": "Strict mode sets all other options to false",
                  "type": "boolean"
                },
                "trusted_caller": {
                  "description": "After a filter on contract-caller, trust all inputs",
                  "type": "boolean"
                },
                "trusted_sender": {
                  "description": "After a filter on tx-sender, trust all inputs",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "passes": {
              "description": "List of analysis passes to run (can be a single string or array)",
              "oneOf": [
                {
                  "enum": [
                    "check_checker",
                    "check_traits",
                    "check_private_function_args"
                  ],
                  "type": "string"
                },
                {
                  "items": {
                    "enum": [
                      "check_checker",
                      "check_traits",
                      "check_private_function_args"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                }
              ]
            }
          },
          "type": "object"
        },
        "remote_data": {
          "description": "Remote data fetching configuration",
          "properties": {
            "api_url": {
              "description": "API URL for remote data fetching",
              "format": "uri",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Enable fetching data from remote sources",
              "type": "boolean"
            },
            "initial_height": {
              "description": "Initial blockchain height for data fetching",
              "minimum": 0,
              "type": "integer"
            },
            "use_mainnet_wallets": {
              "default": false,
              "description": "Use mainnet wallet addresses for testing",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "project"
  ],
  "title": "Clarinet Project Manifest",
  "type": "object"
}